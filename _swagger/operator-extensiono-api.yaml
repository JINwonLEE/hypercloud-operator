openapi: "3.0.0"
info:
  title: "HyperCloud Operator Extension APIs"
  description: "This is a HyperCloud Operator Extension REST API Docs"
  version: "4.1.0.0"
  contact:
    email: "ck2_3@tmax.co.kr"
servers:
- url: http://192.168.6.211:28677
  description: Test Server ( Open Auth )
- url: http://192.168.6.149:28677
  description: Test Server ( Integrated Auth )

# common parameters
components:
  parameters: # common parameters
    tokenParam:
      in: "header"
      name: "Authorization"
      schema:
        type: "string"
        default: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJUbWF4LVByb0F1dGgtV2ViSG9vayIsImlkIjoid3ltaW4tdG1heC5jby5rciIsImV4cCI6MTU4MzEyMTQ5M30.hjvrlaLDFuSjchJKarGKbuWOuafhsuCQgBDo-pqsZvg"
      required: true
      description: "Master Token"
    patchContentType:
      in: "header"
      name: "Content-Type"
      schema:
        type: "string"
        default: "application/json-patch+json"
      required: true
      description: "status patch type"
    mergeContentType:
      in: "header"
      name: "Content-Type"
      schema:
        type: "string"
        default: "application/merge-patch+json"
      required: true
      description: "status patch type"
    offsetParam:
      in: "query"
      name: "offset"
      required: false
      schema:
        type: "string"
        minimum: 0
        default: 0
      description: "The number of items to skip before starting to collect the result set"
    limitParam:
      in: "query"
      name: "limit"
      required: false
      schema:
        type: "string"
        minimum: 1
        default: 20
      description: "The number of items to return"
    startTimeParam:
      in: "query"
      name: "startTime"
      required: false
      schema:
        type: "string"
      description: "The start time (epoch)"
    endTimeParam:
      in: "query"
      name: "endTime"
      required: false
      schema:
        type: "string"
      description: "The end time (epoch)"
    sortParam:
      in: "query"
      name: "sort"
      required: false
      schema:
        type: "string"
        default: "-stageTimestamp"
      description: "The rule of sort (e.g. stageTimestamp, id)" 
  schemas:
    User:
      type: object
      description: "HyperCloud4 User DO"
      properties:
        id:
          type: string
          description: "User ID"
        password:
          type: string
          description: "User Password" 
        alterPassword:
          type: string
          description: "User Alter Password"            
        name:
          type: string
          description: "User Name"
        passwordSalt:
          type: string
          description: "User PasswordSalt"
        dateOfBirth:
          type: string
          description: "User Date of Birth"
        email:
          type: string
          description: "User E-mail"
        phone:
          type: string
          description: "User Phone Number"
        position:
          type: string
          description: "User Position"
        department:
          type: string
          description: "User Department"
        description:
          type: string
          description: "User Description" 
        profile:
          type: string
          description: "User Profile Picture"
        verifyCode:
          type: string
          description: "User Verification Code"
    UserLoginDO:
      type: object
      description: "HyperCloud4 Login DO"
      properties:
        id:
          type: string
          description: "User ID"
        password:
          type: string
          description: "User Password"
    TokenDO:
      type: object
      description: "HyperCloud4 Token DO"
      properties:
        accessToken:
          type: string
          description: "Access Token"
        refreshToken:
          type: string
          description: "Refresh Token"
        atExpireTime:
          type: integer
          description: "Access Token Expire Time [min]"  
    StatusDO:
      type: object
      description: "HyperCloud4 CRDs Status DO"
      properties:
        status:
          type: object
          properties:
            status:
              type: string
              enum: [Success,Reject]
            reason:
              type: string
    Client:
      type: object
      description: "HyperCloud4 Client DO"
      properties:
        appName:
           type: string
           description: "App Name of Client"
        clientId:
           type: string
           description: "Client ID generated"
        clientSecret:
           type: string
           description: "Client Secret generated"
        originUri:
           type: string
           description: "Origin Uri of Client"
        redirectUri:
           type: string
           description: "Redirect Uri of Client After Oauth Login"
paths:
  /user:
    post:
      tags:
      - "Integrated Auth"
      summary: "Integrated Hyper Cloud4 User Create Service"
      requestBody:
        description: "User"
        required: true  
        content:
          application/json:
            schema:
              type: object
              properties:
                dto:
                  $ref: "#/components/schemas/User"    
              example:
                {
                  "id": "woo-tmax.co.kr",
                  "name": "woo",
                  "password": "tmax@23",
                  "dateOfBirth": "19920102",
                  "email": "woo@tmax.co.kr",
                  "phone": "010-4878-8544",
                  "department": "ck2-3",
                  "position" : "developer",
                  "profile" : "12n1o2ko4l213"
                }     
      responses:
        200:
          description: User Create Success
    get:
      tags:
      - "Integrated Auth"
      summary: "Integrated Hyper Cloud4 User ID/Password Find Service"
      parameters:
      - in: "query"
        name: "mode"
        description: "id / password"
        schema:
          type: "string"
      - in: "query"
        name: "email"
        description: "Input User E-mail only to find User ID"
        schema:
          type: "string"   
      - in: "query"
        name: "id"
        description: "Input User ID only to find User Password"
        schema:
          type: "string"    
      responses:
        200:
          description: User ID
    put:
      tags:
      - "Integrated Auth"
      summary: "Integrated Hyper Cloud4 User ID/Email Duplication Check Service or Meta,Password Change Service"    
      parameters:
      - in: "query"
        name: "mode"
        description: " id /meta / password"
        schema:
          type: "string"      
      requestBody:
        description: "User"
        required: true  
        content:
          application/json:
            schema:
              type: object
              properties:
                dto:
                  $ref: "#/components/schemas/User"    
              example:
                {
                  "id" : "test-tmax.co.kr",
                  "alterPassword" : "tmax@2323"
                }     
      responses:
        200:
          description: Integrated Hyper Cloud4 User ID Duplication Check Service or Meta,Password Change Service Success    
  /email:
    post:
      tags:
      - "Integrated Auth"
      summary: "Integrated Hyper Cloud4 Email Vefification Code Send Service"
      requestBody:
        description: "User"
        required: true  
        content:
          application/json:
            schema:
              type: object
              properties:
                dto:
                  $ref: "#/components/schemas/User"    
              example:
                {
                  "email": "woo@tmax.co.kr",
                }     
      responses:
        200:
          description: User Email Vefification Code Send Success
    put:
      tags:
      - "Integrated Auth"
      summary: "Integrated Hyper Cloud4 User Email Verify Service"
      requestBody:
        description: "User"
        required: true  
        content:
          application/json:
            schema:
              type: object
              properties:
                dto:
                  $ref: "#/components/schemas/User"    
              example:
                {
                  "email": "woo@tmax.co.kr",
                  "verifyCode" : "1234"
                }     
      responses:
        200:
          description: User Email Vefification Code Verify Success    

  /otp:
    post:
      tags:
      - "Auth"
      summary: "Auth OTP Number Email Send Service"
      requestBody:
        description: "OTP"
        required: true  
        content:
          application/json:
            schema:
              type: object
              properties:
                dto:
                  $ref: "#/components/schemas/User"    
              example:
                {
                   "id":"shin-test2",
                   "password":"ee26b0dd4af7e749aa1a8ee3c10ae9923f618980772e473f8819a5d4940e0db27ac185f8a0e1d5f84f88bc887fd67b143732c304cc5fa9ad8e6f57f50028a8ff"
                }     
      responses:
        200:
          description: OTP Number Email Send Success
                
  /login:
    post:
      tags:
      - "Auth"
      - "Integrated Auth"
      summary: "Hyper Cloud4 Login Service"
      parameters:
      - in: "query"
        name: "clientId"
        description: "Client Id if login as Oauth Client"
        schema:
          type: "string"
      - in: "query"
        name: "appName"
        description: "Client App Name if login as Oauth Client"
        schema:
          type: "string"
      requestBody:
        description: "UserLoginDO"
        required: true  
        content:
          application/json:
            schema:
              type: object
              properties:
                dto:
                  $ref: "#/components/schemas/UserLoginDO"    
              example:
                {
                  "id": "admin@tmax.co.kr",
                  "password": "admin"
                }
      responses:
        200:
          description: Service OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  dto:
                    $ref: "#/components/schemas/TokenDO"
                example:
                  {
                    "accessToken": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                    "refreshToken": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                  }
  /logout:
    post:
      tags:
      - "Auth"
      - "Integrated Auth"
      summary: "Hyper Cloud4 Logout Service"
      requestBody:
        description: "TokenDO"
        content:
          application/json:
            schema:
              type: object
              properties:
                dto:
                  $ref: "#/components/schemas/TokenDO"    
              example:
                {
                  "accessToken": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                }
      responses:
        200:
          description: Service OK
  /refresh:
    post:
      tags:
      - "Auth"
      - "Integrated Auth"
      summary: "Hyper Cloud4 Refresh Service"
      requestBody:
        description: "TokenDO"
        content:
          application/json:
            schema:
              type: object
              properties:
                dto:
                  $ref: "#/components/schemas/TokenDO"    
              example:
                {
                  "accessToken": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                  "refreshToken": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                }
      responses:
        200:
          description: Service OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  dto:
                    $ref: "#/components/schemas/TokenDO"
                example:
                  {
                    "accessToken": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                  }
    put:
      tags:
      - "Integrated Auth"
      summary: "Integrated Hyper Cloud4 Token Expire Time Update Service"        
      requestBody:
        description: "Token"
        required: true  
        content:
          application/json:
            schema:
              type: object
              properties:
                dto:
                  $ref: "#/components/schemas/TokenDO"    
              example:
                {
                  "atExpireTime": 60
                }     
      responses:
        200:
          description: Integrated Hyper Cloud4 User ID Duplication Check Service or Meta,Password Change Service Success                  
  /authClient:
    post:
      tags:
      - "Oauth"
      summary: "Hyper Cloud4 Oauth Login Service"
      requestBody:
        description: "Oauth Client Register Service"
        required: true  
        content:
          application/json:
            schema:
              type: object
              properties:
                dto:
                  $ref: "#/components/schemas/Client"    
              example:
                {
                  "appName": "woo-app",
                  "originUri": "woo.co.kr",
                  "redirectUri": "woo.co.kr"
                }
      responses:
        200:
          description: Service OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  dto:
                    $ref: "#/components/schemas/Client"
                example:
                  {
                    "appName": "woo-app",
                    "originUri": "woo.co.kr",
                    "redirectUri": "woo.co.kr",
                    "clientId": "cf1102a7-ed92-4c02-b98d-3cc6e949b7cf",
                    "clientSecret": "uMM9n7Ni2vsgQSZEHJkAm8sQdYKt4v"
                  }
  /loginPage:
    post:
      tags:
      - "Oauth"
      summary: "Hyper Cloud4 Oauth Login Service"
      requestBody:
        description: "Oauth Login Page Create Service"
        required: true  
        content:
          application/json:
            schema:
              type: object
              properties:
                dto:
                  $ref: "#/components/schemas/Client"    
              example:
                {
                  "appName": "woo-app",
                  "clientId": "cf1102a7-ed92-4c02-b98d-3cc6e949b7cf",
                  "clientSecret": "uMM9n7Ni2vsgQSZEHJkAm8sQdYKt4v"
                }
      responses:
        200:
          description: Service OK
          content:
            text/plain:
              schema:
                type: string
                example: "http://192.168.8.36/oauth/login.html?clientId=cf1102a7-ed92-4c02-b98d-3cc6e949b7cf&clientSecret=uMM9n7Ni2vsgQSZEHJkAm8sQdYKt4v"                 
  /apis/tmax.io/v1/namespaceclaims/{claim}/status:
    patch:
      tags:
      - "Claim Status Patch"
      summary: "NamespaceClaim Status Patch Service"
      parameters:
      - $ref: "#/components/parameters/tokenParam"
      - in: "path"
        name: "claim"
        description: "Target Claim Name"
        schema: 
          type: "string"
        required: true
      requestBody:
        description: "StatusDO"
        content:
          application/json:
            schema:
              type: object
              properties:
                dto:
                  $ref: "#/components/schemas/StatusDO"    
              example:
                {
                  "status": {
                    "status" : "Success"
                  }
                }
      responses:
        200:
          description: Service OK
  /apis/tmax.io/v1/namespaces/{namespace}/resourcequotaclaims/{claim}/status:
    patch:
      tags:
      - "Claim Status Patch"
      summary: "ResourceQuotaClaim Status Patch Service"
      parameters:
      - $ref: "#/components/parameters/tokenParam"
      - in: "path"
        name: "namespace"
        description: "Target Namespace Name"
        schema: 
          type: "string"
        required: true
      - in: "path"
        name: "claim"
        description: "Target Claim Name"
        schema: 
          type: "string"
        required: true
      requestBody:
        description: "StatusDO"
        content:
          application/json:
            schema:
              type: object
              properties:
                dto:
                  $ref: "#/components/schemas/StatusDO"    
              example:
                {
                  "status": {
                    "status" : "Success"
                  }
                }
      responses:
        200:
          description: Service OK
  /apis/tmax.io/v1/namespaces/{namespace}/rolebindingclaims/{claim}/status:
    patch:
      tags:
      - "Claim Status Patch"
      summary: "RoleBindingClaim Status Patch Service"
      parameters:
      - $ref: "#/components/parameters/tokenParam"
      - in: "path"
        name: "namespace"
        description: "Target Namespace Name"
        schema: 
          type: "string"
        required: true
      - in: "path"
        name: "claim"
        description: "Target Claim Name"
        schema: 
          type: "string"
        required: true
      requestBody:
        description: "StatusDO"
        content:
          application/json:
            schema:
              type: object
              properties:
                dto:
                  $ref: "#/components/schemas/StatusDO"    
              example:
                {
                  "status": {
                    "status" : "Success"
                  }
                }
      responses:
        200:
          description: Service OK
  /apis/tmax.io/v1/namespaces/{namespace}/catalogserviceclaims/{claim}/status:
    patch:
      tags:
      - "Claim Status Patch"
      summary: "CatalogServiceClaim Status Patch Service"
      parameters:
      - $ref: "#/components/parameters/tokenParam"
      - $ref: "#/components/parameters/mergeContentType"
      - in: "path"
        name: "namespace"
        description: "Target Namespace Name"
        schema: 
          type: "string"
        required: true
      - in: "path"
        name: "claim"
        description: "Target Claim Name"
        schema: 
          type: "string"
        required: true
      requestBody:
        description: "StatusDO"
        content:
          application/json:
            schema:
              type: object
              properties:
                dto:
                  $ref: "#/components/schemas/StatusDO"    
              example:
                {
                  "status": {
                    "status" : "Success"
                  }
                }
      responses:
        200:
          description: Service OK
  /metering:
    get:
      tags:
      - "Metering"
      summary: "Metering Data Get Service"
      parameters:
      - $ref: "#/components/parameters/tokenParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/limitParam"
      - in: "query"
        name: "namespace"
        schema:
          type: "string"
        required: false
        description: "Search by namespace"
      - in: "query"
        name: "timeUnit"
        schema:
          type: "string"
          enum: [hour,day,month,year]
        required: false
        description: "hour/day/month/year"
      - in: "query"
        name: "startTime"
        description: "Time Range Search"
        schema:
          type: "number"
        required: false
      - in: "query"
        name: "endTime"
        description: "Time Range Search"
        schema:
          type: "number"
        required: false
      - in: "query"
        name: "sort"
        description: "For Sorting"
        schema:
          type: "string"
          enum: [namespace,cpu,memory,storage,gpu,private_ip,public_ip,metering_time,-namespace,-cpu,-memory,-storage,-gpu,-private_ip,-public_ip,-metering_time]
        required: false
      responses:
        200:
          description: Service OK
          content:
            application/json:
              schema:
                type: object
                example:
                  [
                    {
                      "id": "6B280E02",
                      "namespace": "metallb-system",
                      "cpu": 0.6,
                      "memory": 629145600,
                      "storage": 0,
                      "gpu" : 0,
                      "publicIp": 0,
                      "privateIp": 0,
                      "meteringTime": 1585098000000
                    },
                    {
                      "id": "6B28E700",
                      "namespace": "hypercloud-system",
                      "cpu": 3.3,
                      "memory": 10737418240,
                      "storage": 161061273600,
                      "gpu" : 0,
                      "publicIp": 0,
                      "privateIp": 0,
                      "meteringTime": 1585098000000
                    }
                  ]
  /nameSpace:
    get:
      tags:
      - "Namespace"
      summary: "NameSpace List Get Service by User"
      parameters:
      - $ref: "#/components/parameters/tokenParam"
      - $ref: "#/components/parameters/limitParam"
      responses:
        200:
          description: Service OK
          content:
            application/json:
              schema:
                type: object
                example:
                  {
  "items": [
    {
      "apiVersion": "v1",
      "kind": "Namespace",
      "metadata": {
        "creationTimestamp": {
          "iMillis": 1579593227000,
          "iChronology": {
            "iBase": {
              "iBase": {
                "iBase": {
                  "iMinDaysInFirstWeek": 4
                }
              }
            }
          }
        },
        "name": "test-ns",
        "resourceVersion": "25728383",
        "selfLink": "/api/v1/namespaces/test-ns",
        "uid": "385dbd2a-66a1-43d2-97dd-e53509f81337"
      },
      "spec": {
        "finalizers": [
          "kubernetes"
        ]
      },
      "status": {
        "phase": "Active"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Namespace",
      "metadata": {
        "creationTimestamp": {
          "iMillis": 1585534904000,
          "iChronology": {
            "iBase": {
              "iBase": {
                "iBase": {
                  "iMinDaysInFirstWeek": 4
                }
              }
            }
          }
        },
        "name": "test-system",
        "resourceVersion": "51672924",
        "selfLink": "/api/v1/namespaces/test-system",
        "uid": "e45baf2c-abef-4677-b371-27053003b8a0"
      },
      "spec": {
        "finalizers": [
          "kubernetes"
        ]
      },
      "status": {
        "phase": "Active"
      }
    }
  ]
}        
    put:
      tags:
      - "Trial"
      summary: "Trial Namespace Period Extend Service"    
      parameters:
      - in: "query"
        name: "namespace"
        description: "trial namespace name"
        schema:
          type: "string" 
      - in: "query"
        name: "period"
        description: "trial namespace period"
        schema:
          type: "string"     
      responses:
        200:
          description: "Trial NameSpace Period Extend Success"    

  /nameSpaceClaim:
    get:
      tags:
      - "NamespaceClaim"
      summary: "NameSpaceClaim List Get Service by User"
      parameters:
      - $ref: "#/components/parameters/tokenParam"
      - $ref: "#/components/parameters/limitParam"
      responses:
        200:
          description: Service OK
          content:
            application/json:
              schema:
                type: object
                example:
                  [
                     {
                      "apiVersion": "tmax.io/v1",
                      "kind": "NamespaceClaim",
                      "resourceName": "test-woo",
                      "metadata": {
                        "creationTimestamp": {
                          "iMillis": 1591344762000,
                          "iChronology": {
                            "iBase": {
                              "iMinDaysInFirstWeek": 4
                            }
                          }
                        },
                        "generation": 3,
                        "labels": {
                          "owner": "dnxorjs"
                        },
                        "name": "test-woo0605",
                        "resourceVersion": "94758877",
                        "selfLink": "/apis/tmax.io/v1/namespaceclaims/test-woo0605",
                        "uid": "03998839-65ac-443b-9ec5-a33c098abf7d"
                      },
                      "spec": {
                        "hard": {
                          "limits.cpu": "1",
                          "limits.memory": "1"
                        }
                      },
                      "status": {
                        "reason": "wait for admin permission",
                        "status": "Awaiting"
                      },
                      "operatorStartTime": "1591345381478"
                    }           ]
    put:
      tags:
      - "NamespaceClaim"
      summary: "NameSpace Name Duplicate Verify Service"    
      parameters:
      - in: "query"
        name: "mode"
        description: "namespace"
        schema:
          type: "string" 
      - in: "query"
        name: "namespace"
        description: "namespace name"
        schema:
          type: "string"     
      responses:
        200:
          description: "Trial NameSpace Period Extend Success" 
          
  /audit:
    get:
      tags:
      - "Audit"
      summary: "Audit Get Service"
      parameters:
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/startTimeParam"
      - $ref: "#/components/parameters/endTimeParam"
      - $ref: "#/components/parameters/sortParam"
      - in: "query"
        name: "resource"
        required: false
        schema:
          type: "string"
        description: "The resource type (e.g. deployment, users)"
      - in: "query"
        name: "namespace"
        required: false
        schema:
          type: "string"
        description: "namespace name"
      - in: "query"
        name: "verb"
        required: false
        schema:
          type: "string"
        description: "The action for the resource (e.g. create, delete)"
      - in: "query"
        name: "status"
        required: false
        schema:
          type: "string"
        description: "The response status (Success, Failure)"
      - in: "query"
        name: "code"
        required: false
        schema:
          type: "string"
        description: "The response status code (e.g. 200, 404)"      
      responses:
        200:
          description: Service OK
          content:
            application/json:
              schema:
                type: object
                example:
                  [
                     {
  "kind": "EventList",
  "apiVersion": "audit.k8s.io/v1",
  "items": [
    {
      "auditID": "1e618c9e-e481-4c33-8218-ccc989f1d86e",
      "stage": "ResponseComplete",
      "verb": "login",
      "user": {
        "username": "admin@tmax.co.kr"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "admin@tmax.co.kr",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "reason": "Wrong ID or Password",
        "message": "login success"
      },
      "stageTimestamp": "2020-06-30T10:32:24.000000Z"
    },
    {
      "auditID": "d5eb40ca-a55d-44f1-a30b-aab861802f09",
      "stage": "ResponseComplete",
      "verb": "login",
      "user": {
        "username": "gj-test"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "gj-test",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "message": "login success"
      },
      "stageTimestamp": "2020-06-26T17:45:44.000000Z"
    },
    {
      "auditID": "391d2005-3124-435d-bd0f-80e0e744ed0f",
      "stage": "ResponseComplete",
      "verb": "logout",
      "user": {
        "username": "cloud-tmax.co.kr"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "cloud-tmax.co.kr",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "reason": "Logout success.",
        "message": "logout success"
      },
      "stageTimestamp": "2020-06-26T17:45:33.000000Z"
    },
    {
      "auditID": "4af19729-3f5a-4a8a-9ef0-e13133e9edf8",
      "stage": "ResponseComplete",
      "verb": "login",
      "user": {
        "username": "cloud-tmax.co.kr"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "cloud-tmax.co.kr",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "message": "login success"
      },
      "stageTimestamp": "2020-06-26T17:14:09.000000Z"
    },
    {
      "auditID": "a4ac63f2-5f2d-4a25-adac-24653a7665e7",
      "stage": "ResponseComplete",
      "verb": "logout",
      "user": {
        "username": "admin-tmax.co.kr"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "admin-tmax.co.kr",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "reason": "Logout success.",
        "message": "logout success"
      },
      "stageTimestamp": "2020-06-26T17:14:00.000000Z"
    },
    {
      "auditID": "bc698bbb-6eae-4f98-86e7-d013e4906a96",
      "stage": "ResponseComplete",
      "verb": "login",
      "user": {
        "username": "admin-tmax.co.kr"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "admin-tmax.co.kr",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "message": "login success"
      },
      "stageTimestamp": "2020-06-26T17:12:41.000000Z"
    },
    {
      "auditID": "e23420ea-1d59-4793-af20-5e2521b9dee6",
      "stage": "ResponseComplete",
      "verb": "logout",
      "user": {
        "username": "gj-test"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "gj-test",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "reason": "Logout success.",
        "message": "logout success"
      },
      "stageTimestamp": "2020-06-26T17:12:38.000000Z"
    },
    {
      "auditID": "e0c6e556-b3a1-451c-b6cb-7ff8c0000981",
      "stage": "ResponseComplete",
      "verb": "login",
      "user": {
        "username": "gj-test"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "gj-test",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "message": "login success"
      },
      "stageTimestamp": "2020-06-26T17:12:17.000000Z"
    },
    {
      "auditID": "e09605fa-eb57-44ff-a0c6-c385313c29b9",
      "stage": "ResponseComplete",
      "verb": "logout",
      "user": {
        "username": "cloud-tmax.co.kr"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "cloud-tmax.co.kr",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "reason": "Logout success.",
        "message": "logout success"
      },
      "stageTimestamp": "2020-06-26T17:12:08.000000Z"
    },
    {
      "auditID": "1fe7c936-1dce-43b3-a8bd-fc12d1458a46",
      "stage": "ResponseComplete",
      "verb": "login",
      "user": {
        "username": "gj-test"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "gj-test",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "message": "login success"
      },
      "stageTimestamp": "2020-06-26T16:56:05.000000Z"
    },
    {
      "auditID": "ab83cf90-55a2-4741-991a-5b66ac8348e7",
      "stage": "ResponseComplete",
      "verb": "logout",
      "user": {
        "username": "admin-tmax.co.kr"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "admin-tmax.co.kr",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "reason": "Logout success.",
        "message": "logout success"
      },
      "stageTimestamp": "2020-06-26T16:55:58.000000Z"
    },
    {
      "auditID": "b50f6442-56b1-49ba-b54f-ee4d469ec2bd",
      "stage": "ResponseComplete",
      "verb": "login",
      "user": {
        "username": "admin-tmax.co.kr"
      },
      "userAgent": "PostmanRuntime/7.25.0",
      "objectRef": {
        "resource": "users",
        "name": "admin-tmax.co.kr",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "message": "login success"
      },
      "stageTimestamp": "2020-06-26T16:38:47.000000Z"
    },
    {
      "auditID": "188b185c-ae33-42dd-be91-c387ab00e646",
      "stage": "ResponseComplete",
      "verb": "login",
      "user": {
        "username": "admin-tmax.co.kr"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "admin-tmax.co.kr",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "message": "login success"
      },
      "stageTimestamp": "2020-06-26T16:34:07.000000Z"
    },
    {
      "auditID": "f2255021-f84e-4a31-8455-aacc4b195919",
      "stage": "ResponseComplete",
      "verb": "login",
      "user": {
        "username": "cloud-tmax.co.kr"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "cloud-tmax.co.kr",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "message": "login success"
      },
      "stageTimestamp": "2020-06-26T15:46:08.000000Z"
    },
    {
      "auditID": "ee2d2cee-21f4-4742-a61b-530f56e7808a",
      "stage": "ResponseComplete",
      "verb": "logout",
      "user": {
        "username": "admin-tmax.co.kr"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "admin-tmax.co.kr",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "reason": "Logout success.",
        "message": "logout success"
      },
      "stageTimestamp": "2020-06-26T15:46:03.000000Z"
    },
    {
      "auditID": "fe846b79-3ea4-41e2-beff-9cc5b5876ec9",
      "stage": "ResponseComplete",
      "verb": "login",
      "user": {
        "username": "admin-tmax.co.kr"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "admin-tmax.co.kr",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "message": "login success"
      },
      "stageTimestamp": "2020-06-26T15:42:10.000000Z"
    },
    {
      "auditID": "de51a4aa-93db-4dc4-965c-5da25541d83d",
      "stage": "ResponseComplete",
      "verb": "logout",
      "user": {
        "username": "admin-tmax.co.kr"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "admin-tmax.co.kr",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "reason": "Logout success.",
        "message": "logout success"
      },
      "stageTimestamp": "2020-06-26T15:38:42.000000Z"
    },
    {
      "auditID": "43029395-b847-49f3-bb7f-aa3e3650344f",
      "stage": "ResponseComplete",
      "verb": "login",
      "user": {
        "username": "admin-tmax.co.kr"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "admin-tmax.co.kr",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "message": "login success"
      },
      "stageTimestamp": "2020-06-26T15:38:16.000000Z"
    },
    {
      "auditID": "9b3edf9c-c89a-495a-b567-47442ec24108",
      "stage": "ResponseComplete",
      "verb": "logout",
      "user": {
        "username": "gj-test"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "gj-test",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "reason": "Logout success.",
        "message": "logout success"
      },
      "stageTimestamp": "2020-06-26T15:38:09.000000Z"
    },
    {
      "auditID": "ca37fadc-6c3d-4580-88de-93973cc28822",
      "stage": "ResponseComplete",
      "verb": "login",
      "user": {
        "username": "gj-test"
      },
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36",
      "objectRef": {
        "resource": "users",
        "name": "gj-test",
        "apiGroup": "tmax.io",
        "apiVersion": "v1"
      },
      "responseStatus": {
        "code": 200,
        "status": "Success",
        "message": "login success"
      },
      "stageTimestamp": "2020-06-26T15:37:51.000000Z"
    }
  ]
}           ]
# EOF