apiVersion: tmax.io/v1
kind: Template
metadata:
  name: redis-template
  namespace: default
shortDescription: redis-deployment
imageUrl: https://upload.wikimedia.org/wikipedia/en/6/6b/Redis_Logo.svg
longDescription: redis-deployment
provider: tmax
tags:
- db
- redis
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APP_NAME}-service
    namespace: ${NAMESPACE}
    labels:
      app: ${APP_NAME}
  spec:
    ports:
    - port: 6379
    selector:
      app: ${APP_NAME}
      tier: redis
    clusterIP: None
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${APP_NAME}-pvc
    namespace: ${NAMESPACE}
    labels:
      app: ${APP_NAME}
  spec:
    #storageClassName: manual
    storageClassName: csi-cephfs-sc
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${DB_STORAGE}
- apiVersion: v1
  kind: Secret
  metadata:
    name: ${APP_NAME}-secret
    namespace: ${NAMESPACE}
  type: Opaque
  stringData:
    dbservicename: ${DATABASE_SERVICE_NAME}
    password: ${REDIS_PASSWORD}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ${APP_NAME}-redis
    namespace: ${NAMESPACE}
    labels:
      app: ${APP_NAME}
  spec:
    selector:
      matchLabels:
        app: ${APP_NAME}
        tier: redis
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          tier: redis
      spec:
        containers:
        - image: 192.168.6.110:5000/centos/redis:3.2
          name: redis
          env:
          - name: DATABASE_SERVICE_NAME
            valueFrom:
              secretKeyRef:
                name: ${APP_NAME}-secret
                key: dbservicename
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${APP_NAME}-secret
                key: password
          ports:
          - containerPort: 6379
            name: redis
          volumeMounts:
          - name: redis-persistent-storage
            mountPath: /var/lib/redis/data
        volumes:
        - name: redis-persistent-storage
          persistentVolumeClaim:
            claimName: ${APP_NAME}-pvc
plans:
- name: redis-plan1
  description: redis
  metadata:
    bullets:
    - 'Storage Capacity: 5Gi'
    costs:
      amount: 100
      unit: $
  free: false
  bindable: true
  plan_updateable: false
  schemas:
    service_instance:
      create:
        parameters:
          NAMESPACE: default
          DB_STORAGE: 5Gi
          APP_NAME: redis-deploy
          DATABASE_SERVICE_NAME: redis
          REDIS_PASSWORD: tmax@23
- name: redis-plan2
  description: redis
  metadata:
    bullets:
    - 'Storage Capacity: 30Gi'
    costs:
      amount: 500
      unit: $
  free: false
  bindable: true
  plan_updateable: false
  schemas:
    service_instance:
      create:
        parameters:
          NAMESPACE: default
          DB_STORAGE: 30Gi
          APP_NAME: redis-deploy
          DATABASE_SERVICE_NAME: redis
          REDIS_PASSWORD: tmax@23
parameters:
- name: APP_NAME
  description: database app name
- name: NAMESPACE
  description: namespace of service, secret, pvc, deployment
- name: DB_STORAGE
  description: database request.storage size
- name: DATABASE_SERVICE_NAME
  description: database service name
- name: REDIS_PASSWORD
  description: database password